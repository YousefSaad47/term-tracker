generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String

  role      Role      @default(USER)
  
  subjects  Subject[]
  weeks     Week[]
  news      News[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("users")
}


model Subject {
  id        String   @id @default(uuid())
  name     String
  description String
  slug      String   @unique
  intro     String?

  weeks     Week[]

   userId    String?
  user      User?     @relation(fields: [userId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  @@map("subjects")
}

model Week {
  id         String @id @default(uuid())
  weekNumber Int
  content    String

  isPublished Boolean @default(false)

  subjectId String
  subject   Subject @relation(fields: [subjectId], references: [id], onDelete: Cascade)

   userId    String?
  user      User?     @relation(fields: [userId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([subjectId, weekNumber])
  @@map("weeks")
}

model News {
  id      String @id @default(uuid())
  content String

  isPublished Boolean @default(false)


   userId    String?
  user      User?     @relation(fields: [userId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("news")
}
